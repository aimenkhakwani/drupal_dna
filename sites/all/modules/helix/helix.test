<?php

    //Functional Tests
    class HelixTests extends DrupalWebTestCase
    {
        public static function getInfo() {
            return array(
                'name' => 'Helix Functional Tests',
                'description' => 'Tests for the Helix module.',
                'group' => 'Helix Tests',
            );
        }

        public function setUp() {
            parent::setUp(array('helix'));
        }

        public function testHelixCompletesDna() {
            $this->drupalGet('helix');

            $this->assertText("Enter one half of the double helix", 'Form displayed!');

            $form = array();
            $form['dnainput'] = 'ATCG';
            $this->drupalPost('helix', $form, t('Submit'));

            $this->assertText('First half of the double helix: ATCG', 'Input correctly displayed.');
            $this->assertText('Second half of the double helix: TAGC', 'Output correctly displayed!');
        }
    }

    //Unit Tests
    class HelixTestCase extends DrupalUnitTestCase
    {
        public static function getInfo() {
            return array(
                'name' => 'Helix Unit Tests',
                'description' => 'Tests for the Helix module.',
                'group' => 'Helix Tests',
            );
        }

        function testDnaHelix() {
            $description = 'The letter A should return T.';
            $input = 'A';
            $result = dna_helix($input);
            $expected_output = 'T';
            $this->assertEqual($result, $expected_output, $description);

            $description = 'The letter a should return T.';
            $input = 'a';
            $result = dna_helix($input);
            $expected_output = 'T';
            $this->assertEqual($result, $expected_output, $description);

            $description = 'The letter T should return A.';
            $input = 'T';
            $result = dna_helix($input);
            $expected_output = 'A';
            $this->assertEqual($result, $expected_output, $description);

            $description = 'The letter C should return G.';
            $input = 'C';
            $result = dna_helix($input);
            $expected_output = 'G';
            $this->assertEqual($result, $expected_output, $description);

            $description = 'The letter G should return C.';
            $input = 'G';
            $result = dna_helix($input);
            $expected_output = 'C';
            $this->assertEqual($result, $expected_output, $description);

            $description = 'ATCG should return TAGC.';
            $input = 'ATCG';
            $result = dna_helix($input);
            $expected_output = 'TAGC';
            $this->assertEqual($result, $expected_output, $description);

            $description = 'aTCg should return TAGC.';
            $input = 'aTCg';
            $result = dna_helix($input);
            $expected_output = 'TAGC';
            $this->assertEqual($result, $expected_output, $description);
        }
    }
